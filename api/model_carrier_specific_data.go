/*
Logistic Tracking service API - DCSA OpenAPI specification for Track & Trace v2.2.0

Managing and sending Shipment-, Transport- and Equipment-events and subscriptions for Track &amp; Trace (T&amp;T). API specification issued by DCSA.org. For explanation to specific values or objects please refer to the <a href='https://dcsa.org/wp-content/uploads/2021/10/202108_DCSA_P1_Information-Model-v3.3_TNT22_Final.pdf'>Information Model v3.3</a> Polling can be done on the <b>GET /events</b> endPoint. DCSA version 2.2.0

API version: 1.0.3
Contact: ho.support-api@cma-cgm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CarrierSpecificData struct for CarrierSpecificData
type CarrierSpecificData struct {
	// CMA internal event Code
	InternalEventCode *string `json:"internalEventCode,omitempty"`
	// CMA internal event Label
	InternalEventLabel *string `json:"internalEventLabel,omitempty"`
	// CMA internal location Code
	InternalLocationCode *string `json:"internalLocationCode,omitempty"`
	// CMA internal facility Code
	InternalFacilityCode *string `json:"internalFacilityCode,omitempty"`
	// Carrier export voyage reference defined on Booking
	BookingExportVoyageReference *string `json:"bookingExportVoyageReference,omitempty"`
	// The Transportation phase, Export, Transshipent or Import
	TransportationPhase *string `json:"transportationPhase,omitempty"`
	// The total number of sequence provided in transportation plan
	TransportCallSequenceTotal *int32 `json:"transportCallSequenceTotal,omitempty"`
	// The total number equipment units concerned by the message
	NumberOfUnits *int32 `json:"numberOfUnits,omitempty"`
}

// NewCarrierSpecificData instantiates a new CarrierSpecificData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCarrierSpecificData() *CarrierSpecificData {
	this := CarrierSpecificData{}
	return &this
}

// NewCarrierSpecificDataWithDefaults instantiates a new CarrierSpecificData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCarrierSpecificDataWithDefaults() *CarrierSpecificData {
	this := CarrierSpecificData{}
	return &this
}

// GetInternalEventCode returns the InternalEventCode field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetInternalEventCode() string {
	if o == nil || o.InternalEventCode == nil {
		var ret string
		return ret
	}
	return *o.InternalEventCode
}

// GetInternalEventCodeOk returns a tuple with the InternalEventCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetInternalEventCodeOk() (*string, bool) {
	if o == nil || o.InternalEventCode == nil {
		return nil, false
	}
	return o.InternalEventCode, true
}

// HasInternalEventCode returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasInternalEventCode() bool {
	if o != nil && o.InternalEventCode != nil {
		return true
	}

	return false
}

// SetInternalEventCode gets a reference to the given string and assigns it to the InternalEventCode field.
func (o *CarrierSpecificData) SetInternalEventCode(v string) {
	o.InternalEventCode = &v
}

// GetInternalEventLabel returns the InternalEventLabel field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetInternalEventLabel() string {
	if o == nil || o.InternalEventLabel == nil {
		var ret string
		return ret
	}
	return *o.InternalEventLabel
}

// GetInternalEventLabelOk returns a tuple with the InternalEventLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetInternalEventLabelOk() (*string, bool) {
	if o == nil || o.InternalEventLabel == nil {
		return nil, false
	}
	return o.InternalEventLabel, true
}

// HasInternalEventLabel returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasInternalEventLabel() bool {
	if o != nil && o.InternalEventLabel != nil {
		return true
	}

	return false
}

// SetInternalEventLabel gets a reference to the given string and assigns it to the InternalEventLabel field.
func (o *CarrierSpecificData) SetInternalEventLabel(v string) {
	o.InternalEventLabel = &v
}

// GetInternalLocationCode returns the InternalLocationCode field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetInternalLocationCode() string {
	if o == nil || o.InternalLocationCode == nil {
		var ret string
		return ret
	}
	return *o.InternalLocationCode
}

// GetInternalLocationCodeOk returns a tuple with the InternalLocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetInternalLocationCodeOk() (*string, bool) {
	if o == nil || o.InternalLocationCode == nil {
		return nil, false
	}
	return o.InternalLocationCode, true
}

// HasInternalLocationCode returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasInternalLocationCode() bool {
	if o != nil && o.InternalLocationCode != nil {
		return true
	}

	return false
}

// SetInternalLocationCode gets a reference to the given string and assigns it to the InternalLocationCode field.
func (o *CarrierSpecificData) SetInternalLocationCode(v string) {
	o.InternalLocationCode = &v
}

// GetInternalFacilityCode returns the InternalFacilityCode field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetInternalFacilityCode() string {
	if o == nil || o.InternalFacilityCode == nil {
		var ret string
		return ret
	}
	return *o.InternalFacilityCode
}

// GetInternalFacilityCodeOk returns a tuple with the InternalFacilityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetInternalFacilityCodeOk() (*string, bool) {
	if o == nil || o.InternalFacilityCode == nil {
		return nil, false
	}
	return o.InternalFacilityCode, true
}

// HasInternalFacilityCode returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasInternalFacilityCode() bool {
	if o != nil && o.InternalFacilityCode != nil {
		return true
	}

	return false
}

// SetInternalFacilityCode gets a reference to the given string and assigns it to the InternalFacilityCode field.
func (o *CarrierSpecificData) SetInternalFacilityCode(v string) {
	o.InternalFacilityCode = &v
}

// GetBookingExportVoyageReference returns the BookingExportVoyageReference field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetBookingExportVoyageReference() string {
	if o == nil || o.BookingExportVoyageReference == nil {
		var ret string
		return ret
	}
	return *o.BookingExportVoyageReference
}

// GetBookingExportVoyageReferenceOk returns a tuple with the BookingExportVoyageReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetBookingExportVoyageReferenceOk() (*string, bool) {
	if o == nil || o.BookingExportVoyageReference == nil {
		return nil, false
	}
	return o.BookingExportVoyageReference, true
}

// HasBookingExportVoyageReference returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasBookingExportVoyageReference() bool {
	if o != nil && o.BookingExportVoyageReference != nil {
		return true
	}

	return false
}

// SetBookingExportVoyageReference gets a reference to the given string and assigns it to the BookingExportVoyageReference field.
func (o *CarrierSpecificData) SetBookingExportVoyageReference(v string) {
	o.BookingExportVoyageReference = &v
}

// GetTransportationPhase returns the TransportationPhase field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetTransportationPhase() string {
	if o == nil || o.TransportationPhase == nil {
		var ret string
		return ret
	}
	return *o.TransportationPhase
}

// GetTransportationPhaseOk returns a tuple with the TransportationPhase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetTransportationPhaseOk() (*string, bool) {
	if o == nil || o.TransportationPhase == nil {
		return nil, false
	}
	return o.TransportationPhase, true
}

// HasTransportationPhase returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasTransportationPhase() bool {
	if o != nil && o.TransportationPhase != nil {
		return true
	}

	return false
}

// SetTransportationPhase gets a reference to the given string and assigns it to the TransportationPhase field.
func (o *CarrierSpecificData) SetTransportationPhase(v string) {
	o.TransportationPhase = &v
}

// GetTransportCallSequenceTotal returns the TransportCallSequenceTotal field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetTransportCallSequenceTotal() int32 {
	if o == nil || o.TransportCallSequenceTotal == nil {
		var ret int32
		return ret
	}
	return *o.TransportCallSequenceTotal
}

// GetTransportCallSequenceTotalOk returns a tuple with the TransportCallSequenceTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetTransportCallSequenceTotalOk() (*int32, bool) {
	if o == nil || o.TransportCallSequenceTotal == nil {
		return nil, false
	}
	return o.TransportCallSequenceTotal, true
}

// HasTransportCallSequenceTotal returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasTransportCallSequenceTotal() bool {
	if o != nil && o.TransportCallSequenceTotal != nil {
		return true
	}

	return false
}

// SetTransportCallSequenceTotal gets a reference to the given int32 and assigns it to the TransportCallSequenceTotal field.
func (o *CarrierSpecificData) SetTransportCallSequenceTotal(v int32) {
	o.TransportCallSequenceTotal = &v
}

// GetNumberOfUnits returns the NumberOfUnits field value if set, zero value otherwise.
func (o *CarrierSpecificData) GetNumberOfUnits() int32 {
	if o == nil || o.NumberOfUnits == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfUnits
}

// GetNumberOfUnitsOk returns a tuple with the NumberOfUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CarrierSpecificData) GetNumberOfUnitsOk() (*int32, bool) {
	if o == nil || o.NumberOfUnits == nil {
		return nil, false
	}
	return o.NumberOfUnits, true
}

// HasNumberOfUnits returns a boolean if a field has been set.
func (o *CarrierSpecificData) HasNumberOfUnits() bool {
	if o != nil && o.NumberOfUnits != nil {
		return true
	}

	return false
}

// SetNumberOfUnits gets a reference to the given int32 and assigns it to the NumberOfUnits field.
func (o *CarrierSpecificData) SetNumberOfUnits(v int32) {
	o.NumberOfUnits = &v
}

func (o CarrierSpecificData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternalEventCode != nil {
		toSerialize["internalEventCode"] = o.InternalEventCode
	}
	if o.InternalEventLabel != nil {
		toSerialize["internalEventLabel"] = o.InternalEventLabel
	}
	if o.InternalLocationCode != nil {
		toSerialize["internalLocationCode"] = o.InternalLocationCode
	}
	if o.InternalFacilityCode != nil {
		toSerialize["internalFacilityCode"] = o.InternalFacilityCode
	}
	if o.BookingExportVoyageReference != nil {
		toSerialize["bookingExportVoyageReference"] = o.BookingExportVoyageReference
	}
	if o.TransportationPhase != nil {
		toSerialize["transportationPhase"] = o.TransportationPhase
	}
	if o.TransportCallSequenceTotal != nil {
		toSerialize["transportCallSequenceTotal"] = o.TransportCallSequenceTotal
	}
	if o.NumberOfUnits != nil {
		toSerialize["numberOfUnits"] = o.NumberOfUnits
	}
	return json.Marshal(toSerialize)
}

type NullableCarrierSpecificData struct {
	value *CarrierSpecificData
	isSet bool
}

func (v NullableCarrierSpecificData) Get() *CarrierSpecificData {
	return v.value
}

func (v *NullableCarrierSpecificData) Set(val *CarrierSpecificData) {
	v.value = val
	v.isSet = true
}

func (v NullableCarrierSpecificData) IsSet() bool {
	return v.isSet
}

func (v *NullableCarrierSpecificData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCarrierSpecificData(val *CarrierSpecificData) *NullableCarrierSpecificData {
	return &NullableCarrierSpecificData{value: val, isSet: true}
}

func (v NullableCarrierSpecificData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCarrierSpecificData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


