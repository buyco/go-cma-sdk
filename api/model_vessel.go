/*
Logistic Tracking service API - DCSA OpenAPI specification for Track & Trace v2.2.0

Managing and sending Shipment-, Transport- and Equipment-events and subscriptions for Track &amp; Trace (T&amp;T). API specification issued by DCSA.org.  <i>Please note that shipment events and subscription management are not covered yet by CMA CGM API.</i>  <br> This API is accessible through <ul> <li> <b> Public </b> connection (authentication with API Key): this allows to retrieve standard equipment moves (e.g. ready to be loaded, discharged), Transhipment moves (e.g. discharged and re-loaded onboard) and planned vessel departure and arrival dates. </li> <li> <b> Private </b> connection (authentication with Oauth2 client credentials): this allows to retrieve additional private events such as actual rail and ramp moves, planned departure and arrival dates for inland moves. These private events are available only if you (or your end customer) are identified on the booking as: Booking Party, Deciding Party, Consignee, Notifier or Shipper. </li> </ul> </br> For explanation to specific values or objects please refer to the <a href='https://dcsa.org/wp-content/uploads/2021/10/202108_DCSA_P1_Information-Model-v3.3_TNT22_Final.pdf'>Information Model v3.3</a> Polling can be done on the <b>GET /events</b> endPoint. DCSA version 2.2.0

API version: 1.2.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Vessel describes a floating, sea going structure (mother vessels and feeder vessels) with either an internal or external mode of propulsion designed for the transport of cargo and/or passengers. Ocean vessels are uniquely identified by an IMO number consisting of 7 digits, or alternatively by their AIS signal with an MMSI number.
type Vessel struct {
	// The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel
	VesselIMONumber string `json:"vesselIMONumber"`
	// The name of the Vessel given by the Vessel Operator and registered with IMO.
	VesselName *string `json:"vesselName,omitempty"`
	// The flag of the nation whose laws the vessel is registered under. This is the ISO 3166 two-letter country code
	VesselFlag *string `json:"vesselFlag,omitempty"`
	// A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.
	VesselCallSignNumber *string `json:"vesselCallSignNumber,omitempty"`
	// The carrier who is in charge of the vessel operation based on either the SMDG or SCAC code lists
	VesselOperatorCarrierCode             *string                                `json:"vesselOperatorCarrierCode,omitempty"`
	VesselOperatorCarrierCodeListProvider *VesselOperatorCarrierCodeListProvider `json:"vesselOperatorCarrierCodeListProvider,omitempty"`
}

// NewVessel instantiates a new Vessel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVessel(vesselIMONumber string) *Vessel {
	this := Vessel{}
	this.VesselIMONumber = vesselIMONumber
	return &this
}

// NewVesselWithDefaults instantiates a new Vessel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVesselWithDefaults() *Vessel {
	this := Vessel{}
	return &this
}

// GetVesselIMONumber returns the VesselIMONumber field value
func (o *Vessel) GetVesselIMONumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VesselIMONumber
}

// GetVesselIMONumberOk returns a tuple with the VesselIMONumber field value
// and a boolean to check if the value has been set.
func (o *Vessel) GetVesselIMONumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VesselIMONumber, true
}

// SetVesselIMONumber sets field value
func (o *Vessel) SetVesselIMONumber(v string) {
	o.VesselIMONumber = v
}

// GetVesselName returns the VesselName field value if set, zero value otherwise.
func (o *Vessel) GetVesselName() string {
	if o == nil || o.VesselName == nil {
		var ret string
		return ret
	}
	return *o.VesselName
}

// GetVesselNameOk returns a tuple with the VesselName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vessel) GetVesselNameOk() (*string, bool) {
	if o == nil || o.VesselName == nil {
		return nil, false
	}
	return o.VesselName, true
}

// HasVesselName returns a boolean if a field has been set.
func (o *Vessel) HasVesselName() bool {
	if o != nil && o.VesselName != nil {
		return true
	}

	return false
}

// SetVesselName gets a reference to the given string and assigns it to the VesselName field.
func (o *Vessel) SetVesselName(v string) {
	o.VesselName = &v
}

// GetVesselFlag returns the VesselFlag field value if set, zero value otherwise.
func (o *Vessel) GetVesselFlag() string {
	if o == nil || o.VesselFlag == nil {
		var ret string
		return ret
	}
	return *o.VesselFlag
}

// GetVesselFlagOk returns a tuple with the VesselFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vessel) GetVesselFlagOk() (*string, bool) {
	if o == nil || o.VesselFlag == nil {
		return nil, false
	}
	return o.VesselFlag, true
}

// HasVesselFlag returns a boolean if a field has been set.
func (o *Vessel) HasVesselFlag() bool {
	if o != nil && o.VesselFlag != nil {
		return true
	}

	return false
}

// SetVesselFlag gets a reference to the given string and assigns it to the VesselFlag field.
func (o *Vessel) SetVesselFlag(v string) {
	o.VesselFlag = &v
}

// GetVesselCallSignNumber returns the VesselCallSignNumber field value if set, zero value otherwise.
func (o *Vessel) GetVesselCallSignNumber() string {
	if o == nil || o.VesselCallSignNumber == nil {
		var ret string
		return ret
	}
	return *o.VesselCallSignNumber
}

// GetVesselCallSignNumberOk returns a tuple with the VesselCallSignNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vessel) GetVesselCallSignNumberOk() (*string, bool) {
	if o == nil || o.VesselCallSignNumber == nil {
		return nil, false
	}
	return o.VesselCallSignNumber, true
}

// HasVesselCallSignNumber returns a boolean if a field has been set.
func (o *Vessel) HasVesselCallSignNumber() bool {
	if o != nil && o.VesselCallSignNumber != nil {
		return true
	}

	return false
}

// SetVesselCallSignNumber gets a reference to the given string and assigns it to the VesselCallSignNumber field.
func (o *Vessel) SetVesselCallSignNumber(v string) {
	o.VesselCallSignNumber = &v
}

// GetVesselOperatorCarrierCode returns the VesselOperatorCarrierCode field value if set, zero value otherwise.
func (o *Vessel) GetVesselOperatorCarrierCode() string {
	if o == nil || o.VesselOperatorCarrierCode == nil {
		var ret string
		return ret
	}
	return *o.VesselOperatorCarrierCode
}

// GetVesselOperatorCarrierCodeOk returns a tuple with the VesselOperatorCarrierCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vessel) GetVesselOperatorCarrierCodeOk() (*string, bool) {
	if o == nil || o.VesselOperatorCarrierCode == nil {
		return nil, false
	}
	return o.VesselOperatorCarrierCode, true
}

// HasVesselOperatorCarrierCode returns a boolean if a field has been set.
func (o *Vessel) HasVesselOperatorCarrierCode() bool {
	if o != nil && o.VesselOperatorCarrierCode != nil {
		return true
	}

	return false
}

// SetVesselOperatorCarrierCode gets a reference to the given string and assigns it to the VesselOperatorCarrierCode field.
func (o *Vessel) SetVesselOperatorCarrierCode(v string) {
	o.VesselOperatorCarrierCode = &v
}

// GetVesselOperatorCarrierCodeListProvider returns the VesselOperatorCarrierCodeListProvider field value if set, zero value otherwise.
func (o *Vessel) GetVesselOperatorCarrierCodeListProvider() VesselOperatorCarrierCodeListProvider {
	if o == nil || o.VesselOperatorCarrierCodeListProvider == nil {
		var ret VesselOperatorCarrierCodeListProvider
		return ret
	}
	return *o.VesselOperatorCarrierCodeListProvider
}

// GetVesselOperatorCarrierCodeListProviderOk returns a tuple with the VesselOperatorCarrierCodeListProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vessel) GetVesselOperatorCarrierCodeListProviderOk() (*VesselOperatorCarrierCodeListProvider, bool) {
	if o == nil || o.VesselOperatorCarrierCodeListProvider == nil {
		return nil, false
	}
	return o.VesselOperatorCarrierCodeListProvider, true
}

// HasVesselOperatorCarrierCodeListProvider returns a boolean if a field has been set.
func (o *Vessel) HasVesselOperatorCarrierCodeListProvider() bool {
	if o != nil && o.VesselOperatorCarrierCodeListProvider != nil {
		return true
	}

	return false
}

// SetVesselOperatorCarrierCodeListProvider gets a reference to the given VesselOperatorCarrierCodeListProvider and assigns it to the VesselOperatorCarrierCodeListProvider field.
func (o *Vessel) SetVesselOperatorCarrierCodeListProvider(v VesselOperatorCarrierCodeListProvider) {
	o.VesselOperatorCarrierCodeListProvider = &v
}

func (o Vessel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vesselIMONumber"] = o.VesselIMONumber
	}
	if o.VesselName != nil {
		toSerialize["vesselName"] = o.VesselName
	}
	if o.VesselFlag != nil {
		toSerialize["vesselFlag"] = o.VesselFlag
	}
	if o.VesselCallSignNumber != nil {
		toSerialize["vesselCallSignNumber"] = o.VesselCallSignNumber
	}
	if o.VesselOperatorCarrierCode != nil {
		toSerialize["vesselOperatorCarrierCode"] = o.VesselOperatorCarrierCode
	}
	if o.VesselOperatorCarrierCodeListProvider != nil {
		toSerialize["vesselOperatorCarrierCodeListProvider"] = o.VesselOperatorCarrierCodeListProvider
	}
	return json.Marshal(toSerialize)
}

type NullableVessel struct {
	value *Vessel
	isSet bool
}

func (v NullableVessel) Get() *Vessel {
	return v.value
}

func (v *NullableVessel) Set(val *Vessel) {
	v.value = val
	v.isSet = true
}

func (v NullableVessel) IsSet() bool {
	return v.isSet
}

func (v *NullableVessel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVessel(val *Vessel) *NullableVessel {
	return &NullableVessel{value: val, isSet: true}
}

func (v NullableVessel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVessel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
