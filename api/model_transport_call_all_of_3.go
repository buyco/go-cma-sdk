/*
Logistic Tracking service API - DCSA OpenAPI specification for Track & Trace v2.2.0

Managing and sending Shipment-, Transport- and Equipment-events and subscriptions for Track &amp; Trace (T&amp;T). API specification issued by DCSA.org. For explanation to specific values or objects please refer to the <a href='https://dcsa.org/wp-content/uploads/2021/10/202108_DCSA_P1_Information-Model-v3.3_TNT22_Final.pdf'>Information Model v3.3</a> Polling can be done on the <b>GET /events</b> endPoint. DCSA version 2.2.0

API version: 1.0.3
Contact: ho.support-api@cma-cgm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TransportCallAllOf3 struct for TransportCallAllOf3
type TransportCallAllOf3 struct {
	// The vessel operator-specific identifier of the Voyage. In case there are multiple voyages the export voyage is chosen.
	// Deprecated
	CarrierVoyageNumber interface{} `json:"carrierVoyageNumber,omitempty"`
}

// NewTransportCallAllOf3 instantiates a new TransportCallAllOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCallAllOf3() *TransportCallAllOf3 {
	this := TransportCallAllOf3{}
	return &this
}

// NewTransportCallAllOf3WithDefaults instantiates a new TransportCallAllOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallAllOf3WithDefaults() *TransportCallAllOf3 {
	this := TransportCallAllOf3{}
	return &this
}

// GetCarrierVoyageNumber returns the CarrierVoyageNumber field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *TransportCallAllOf3) GetCarrierVoyageNumber() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CarrierVoyageNumber
}

// GetCarrierVoyageNumberOk returns a tuple with the CarrierVoyageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *TransportCallAllOf3) GetCarrierVoyageNumberOk() (*interface{}, bool) {
	if o == nil || o.CarrierVoyageNumber == nil {
		return nil, false
	}
	return &o.CarrierVoyageNumber, true
}

// HasCarrierVoyageNumber returns a boolean if a field has been set.
func (o *TransportCallAllOf3) HasCarrierVoyageNumber() bool {
	if o != nil && o.CarrierVoyageNumber != nil {
		return true
	}

	return false
}

// SetCarrierVoyageNumber gets a reference to the given interface{} and assigns it to the CarrierVoyageNumber field.
// Deprecated
func (o *TransportCallAllOf3) SetCarrierVoyageNumber(v interface{}) {
	o.CarrierVoyageNumber = v
}

func (o TransportCallAllOf3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CarrierVoyageNumber != nil {
		toSerialize["carrierVoyageNumber"] = o.CarrierVoyageNumber
	}
	return json.Marshal(toSerialize)
}

type NullableTransportCallAllOf3 struct {
	value *TransportCallAllOf3
	isSet bool
}

func (v NullableTransportCallAllOf3) Get() *TransportCallAllOf3 {
	return v.value
}

func (v *NullableTransportCallAllOf3) Set(val *TransportCallAllOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCallAllOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCallAllOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCallAllOf3(val *TransportCallAllOf3) *NullableTransportCallAllOf3 {
	return &NullableTransportCallAllOf3{value: val, isSet: true}
}

func (v NullableTransportCallAllOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCallAllOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
