/*
 * logistic.tracking.v1
 *
 * Retrieve tracking data about your cargo using container number, booking number or bill of lading.
 *
 * API version: 1.4.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cma

import (
	"encoding/json"
	"time"
)

// JourneyLeg struct for JourneyLeg
type JourneyLeg struct {
	// sequence number of the journey leg
	SequenceNumber *int32 `json:"sequenceNumber,omitempty"`
	PointFrom *CodeAndName `json:"pointFrom,omitempty"`
	VesselFrom *Vessel `json:"vesselFrom,omitempty"`
	VesselTo *Vessel `json:"vesselTo,omitempty"`
	PointTo *CodeAndName `json:"pointTo,omitempty"`
	// pool code of journey leg departure
	PoolLocationFromCode *string `json:"poolLocationFromCode,omitempty"`
	// pool code of journey leg arrival
	PoolLocationToCode *string `json:"poolLocationToCode,omitempty"`
	// collection date
	CollectionDate *time.Time `json:"collectionDate,omitempty"`
	// voyage reference at the journey leg departure
	VoyageReference *string `json:"voyageReference,omitempty"`
	// voyage reference at the journey leg arrival
	DischargeVoyageReference *string `json:"dischargeVoyageReference,omitempty"`
	// delivery date
	DeliveryDate *time.Time `json:"deliveryDate,omitempty"`
	// shipping companies codes are 0001, 0002... provided by CMA CGM
	ShipCompCode *string `json:"shipCompCode,omitempty"`
}

// NewJourneyLeg instantiates a new JourneyLeg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJourneyLeg() *JourneyLeg {
	this := JourneyLeg{}
	return &this
}

// NewJourneyLegWithDefaults instantiates a new JourneyLeg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJourneyLegWithDefaults() *JourneyLeg {
	this := JourneyLeg{}
	return &this
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *JourneyLeg) GetSequenceNumber() int32 {
	if o == nil || o.SequenceNumber == nil {
		var ret int32
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetSequenceNumberOk() (*int32, bool) {
	if o == nil || o.SequenceNumber == nil {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *JourneyLeg) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber != nil {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int32 and assigns it to the SequenceNumber field.
func (o *JourneyLeg) SetSequenceNumber(v int32) {
	o.SequenceNumber = &v
}

// GetPointFrom returns the PointFrom field value if set, zero value otherwise.
func (o *JourneyLeg) GetPointFrom() CodeAndName {
	if o == nil || o.PointFrom == nil {
		var ret CodeAndName
		return ret
	}
	return *o.PointFrom
}

// GetPointFromOk returns a tuple with the PointFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetPointFromOk() (*CodeAndName, bool) {
	if o == nil || o.PointFrom == nil {
		return nil, false
	}
	return o.PointFrom, true
}

// HasPointFrom returns a boolean if a field has been set.
func (o *JourneyLeg) HasPointFrom() bool {
	if o != nil && o.PointFrom != nil {
		return true
	}

	return false
}

// SetPointFrom gets a reference to the given CodeAndName and assigns it to the PointFrom field.
func (o *JourneyLeg) SetPointFrom(v CodeAndName) {
	o.PointFrom = &v
}

// GetVesselFrom returns the VesselFrom field value if set, zero value otherwise.
func (o *JourneyLeg) GetVesselFrom() Vessel {
	if o == nil || o.VesselFrom == nil {
		var ret Vessel
		return ret
	}
	return *o.VesselFrom
}

// GetVesselFromOk returns a tuple with the VesselFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetVesselFromOk() (*Vessel, bool) {
	if o == nil || o.VesselFrom == nil {
		return nil, false
	}
	return o.VesselFrom, true
}

// HasVesselFrom returns a boolean if a field has been set.
func (o *JourneyLeg) HasVesselFrom() bool {
	if o != nil && o.VesselFrom != nil {
		return true
	}

	return false
}

// SetVesselFrom gets a reference to the given Vessel and assigns it to the VesselFrom field.
func (o *JourneyLeg) SetVesselFrom(v Vessel) {
	o.VesselFrom = &v
}

// GetVesselTo returns the VesselTo field value if set, zero value otherwise.
func (o *JourneyLeg) GetVesselTo() Vessel {
	if o == nil || o.VesselTo == nil {
		var ret Vessel
		return ret
	}
	return *o.VesselTo
}

// GetVesselToOk returns a tuple with the VesselTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetVesselToOk() (*Vessel, bool) {
	if o == nil || o.VesselTo == nil {
		return nil, false
	}
	return o.VesselTo, true
}

// HasVesselTo returns a boolean if a field has been set.
func (o *JourneyLeg) HasVesselTo() bool {
	if o != nil && o.VesselTo != nil {
		return true
	}

	return false
}

// SetVesselTo gets a reference to the given Vessel and assigns it to the VesselTo field.
func (o *JourneyLeg) SetVesselTo(v Vessel) {
	o.VesselTo = &v
}

// GetPointTo returns the PointTo field value if set, zero value otherwise.
func (o *JourneyLeg) GetPointTo() CodeAndName {
	if o == nil || o.PointTo == nil {
		var ret CodeAndName
		return ret
	}
	return *o.PointTo
}

// GetPointToOk returns a tuple with the PointTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetPointToOk() (*CodeAndName, bool) {
	if o == nil || o.PointTo == nil {
		return nil, false
	}
	return o.PointTo, true
}

// HasPointTo returns a boolean if a field has been set.
func (o *JourneyLeg) HasPointTo() bool {
	if o != nil && o.PointTo != nil {
		return true
	}

	return false
}

// SetPointTo gets a reference to the given CodeAndName and assigns it to the PointTo field.
func (o *JourneyLeg) SetPointTo(v CodeAndName) {
	o.PointTo = &v
}

// GetPoolLocationFromCode returns the PoolLocationFromCode field value if set, zero value otherwise.
func (o *JourneyLeg) GetPoolLocationFromCode() string {
	if o == nil || o.PoolLocationFromCode == nil {
		var ret string
		return ret
	}
	return *o.PoolLocationFromCode
}

// GetPoolLocationFromCodeOk returns a tuple with the PoolLocationFromCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetPoolLocationFromCodeOk() (*string, bool) {
	if o == nil || o.PoolLocationFromCode == nil {
		return nil, false
	}
	return o.PoolLocationFromCode, true
}

// HasPoolLocationFromCode returns a boolean if a field has been set.
func (o *JourneyLeg) HasPoolLocationFromCode() bool {
	if o != nil && o.PoolLocationFromCode != nil {
		return true
	}

	return false
}

// SetPoolLocationFromCode gets a reference to the given string and assigns it to the PoolLocationFromCode field.
func (o *JourneyLeg) SetPoolLocationFromCode(v string) {
	o.PoolLocationFromCode = &v
}

// GetPoolLocationToCode returns the PoolLocationToCode field value if set, zero value otherwise.
func (o *JourneyLeg) GetPoolLocationToCode() string {
	if o == nil || o.PoolLocationToCode == nil {
		var ret string
		return ret
	}
	return *o.PoolLocationToCode
}

// GetPoolLocationToCodeOk returns a tuple with the PoolLocationToCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetPoolLocationToCodeOk() (*string, bool) {
	if o == nil || o.PoolLocationToCode == nil {
		return nil, false
	}
	return o.PoolLocationToCode, true
}

// HasPoolLocationToCode returns a boolean if a field has been set.
func (o *JourneyLeg) HasPoolLocationToCode() bool {
	if o != nil && o.PoolLocationToCode != nil {
		return true
	}

	return false
}

// SetPoolLocationToCode gets a reference to the given string and assigns it to the PoolLocationToCode field.
func (o *JourneyLeg) SetPoolLocationToCode(v string) {
	o.PoolLocationToCode = &v
}

// GetCollectionDate returns the CollectionDate field value if set, zero value otherwise.
func (o *JourneyLeg) GetCollectionDate() time.Time {
	if o == nil || o.CollectionDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CollectionDate
}

// GetCollectionDateOk returns a tuple with the CollectionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetCollectionDateOk() (*time.Time, bool) {
	if o == nil || o.CollectionDate == nil {
		return nil, false
	}
	return o.CollectionDate, true
}

// HasCollectionDate returns a boolean if a field has been set.
func (o *JourneyLeg) HasCollectionDate() bool {
	if o != nil && o.CollectionDate != nil {
		return true
	}

	return false
}

// SetCollectionDate gets a reference to the given time.Time and assigns it to the CollectionDate field.
func (o *JourneyLeg) SetCollectionDate(v time.Time) {
	o.CollectionDate = &v
}

// GetVoyageReference returns the VoyageReference field value if set, zero value otherwise.
func (o *JourneyLeg) GetVoyageReference() string {
	if o == nil || o.VoyageReference == nil {
		var ret string
		return ret
	}
	return *o.VoyageReference
}

// GetVoyageReferenceOk returns a tuple with the VoyageReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetVoyageReferenceOk() (*string, bool) {
	if o == nil || o.VoyageReference == nil {
		return nil, false
	}
	return o.VoyageReference, true
}

// HasVoyageReference returns a boolean if a field has been set.
func (o *JourneyLeg) HasVoyageReference() bool {
	if o != nil && o.VoyageReference != nil {
		return true
	}

	return false
}

// SetVoyageReference gets a reference to the given string and assigns it to the VoyageReference field.
func (o *JourneyLeg) SetVoyageReference(v string) {
	o.VoyageReference = &v
}

// GetDischargeVoyageReference returns the DischargeVoyageReference field value if set, zero value otherwise.
func (o *JourneyLeg) GetDischargeVoyageReference() string {
	if o == nil || o.DischargeVoyageReference == nil {
		var ret string
		return ret
	}
	return *o.DischargeVoyageReference
}

// GetDischargeVoyageReferenceOk returns a tuple with the DischargeVoyageReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetDischargeVoyageReferenceOk() (*string, bool) {
	if o == nil || o.DischargeVoyageReference == nil {
		return nil, false
	}
	return o.DischargeVoyageReference, true
}

// HasDischargeVoyageReference returns a boolean if a field has been set.
func (o *JourneyLeg) HasDischargeVoyageReference() bool {
	if o != nil && o.DischargeVoyageReference != nil {
		return true
	}

	return false
}

// SetDischargeVoyageReference gets a reference to the given string and assigns it to the DischargeVoyageReference field.
func (o *JourneyLeg) SetDischargeVoyageReference(v string) {
	o.DischargeVoyageReference = &v
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise.
func (o *JourneyLeg) GetDeliveryDate() time.Time {
	if o == nil || o.DeliveryDate == nil {
		var ret time.Time
		return ret
	}
	return *o.DeliveryDate
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetDeliveryDateOk() (*time.Time, bool) {
	if o == nil || o.DeliveryDate == nil {
		return nil, false
	}
	return o.DeliveryDate, true
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *JourneyLeg) HasDeliveryDate() bool {
	if o != nil && o.DeliveryDate != nil {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given time.Time and assigns it to the DeliveryDate field.
func (o *JourneyLeg) SetDeliveryDate(v time.Time) {
	o.DeliveryDate = &v
}

// GetShipCompCode returns the ShipCompCode field value if set, zero value otherwise.
func (o *JourneyLeg) GetShipCompCode() string {
	if o == nil || o.ShipCompCode == nil {
		var ret string
		return ret
	}
	return *o.ShipCompCode
}

// GetShipCompCodeOk returns a tuple with the ShipCompCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JourneyLeg) GetShipCompCodeOk() (*string, bool) {
	if o == nil || o.ShipCompCode == nil {
		return nil, false
	}
	return o.ShipCompCode, true
}

// HasShipCompCode returns a boolean if a field has been set.
func (o *JourneyLeg) HasShipCompCode() bool {
	if o != nil && o.ShipCompCode != nil {
		return true
	}

	return false
}

// SetShipCompCode gets a reference to the given string and assigns it to the ShipCompCode field.
func (o *JourneyLeg) SetShipCompCode(v string) {
	o.ShipCompCode = &v
}

func (o JourneyLeg) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SequenceNumber != nil {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if o.PointFrom != nil {
		toSerialize["pointFrom"] = o.PointFrom
	}
	if o.VesselFrom != nil {
		toSerialize["vesselFrom"] = o.VesselFrom
	}
	if o.VesselTo != nil {
		toSerialize["vesselTo"] = o.VesselTo
	}
	if o.PointTo != nil {
		toSerialize["pointTo"] = o.PointTo
	}
	if o.PoolLocationFromCode != nil {
		toSerialize["poolLocationFromCode"] = o.PoolLocationFromCode
	}
	if o.PoolLocationToCode != nil {
		toSerialize["poolLocationToCode"] = o.PoolLocationToCode
	}
	if o.CollectionDate != nil {
		toSerialize["collectionDate"] = o.CollectionDate
	}
	if o.VoyageReference != nil {
		toSerialize["voyageReference"] = o.VoyageReference
	}
	if o.DischargeVoyageReference != nil {
		toSerialize["dischargeVoyageReference"] = o.DischargeVoyageReference
	}
	if o.DeliveryDate != nil {
		toSerialize["deliveryDate"] = o.DeliveryDate
	}
	if o.ShipCompCode != nil {
		toSerialize["shipCompCode"] = o.ShipCompCode
	}
	return json.Marshal(toSerialize)
}

type NullableJourneyLeg struct {
	value *JourneyLeg
	isSet bool
}

func (v NullableJourneyLeg) Get() *JourneyLeg {
	return v.value
}

func (v *NullableJourneyLeg) Set(val *JourneyLeg) {
	v.value = val
	v.isSet = true
}

func (v NullableJourneyLeg) IsSet() bool {
	return v.isSet
}

func (v *NullableJourneyLeg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJourneyLeg(val *JourneyLeg) *NullableJourneyLeg {
	return &NullableJourneyLeg{value: val, isSet: true}
}

func (v NullableJourneyLeg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJourneyLeg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


