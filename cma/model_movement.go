/*
 * logistic.tracking.v1
 *
 * Retrieve tracking data about your cargo using container number, booking number or bill of lading.
 *
 * API version: 1.4.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cma

import (
	"encoding/json"
	"time"
)

// Movement struct for Movement
type Movement struct {
	// movement display order
	StatusOrder *string `json:"statusOrder,omitempty"`
	Status *CodeAndName `json:"status,omitempty"`
	// date of the movement
	Date *time.Time `json:"date,omitempty"`
	// date of move integration
	ReportedOn *time.Time `json:"reportedOn,omitempty"`
	// terminal of the movement
	PoolLocation *string `json:"poolLocation,omitempty"`
	PointLocation *CodeAndName `json:"pointLocation,omitempty"`
	// Voyage Reference
	VoyageReference *string `json:"voyageReference,omitempty"`
	Vessel *Vessel `json:"vessel,omitempty"`
	// point of discharge
	PointOfDischarge *string `json:"pointOfDischarge,omitempty"`
	// point of origin
	PortOfOrigin *string `json:"portOfOrigin,omitempty"`
	// point of loading
	PortOfLoading *string `json:"portOfLoading,omitempty"`
	// final port of discharge
	FinalPod *string `json:"finalPod,omitempty"`
	// final point of destination
	FinalDest *string `json:"finalDest,omitempty"`
	// country code such as FR
	CountryCode *string `json:"countryCode,omitempty"`
	// shipping companies codes are 0001, 0002... provided by CMA CGM referential
	ShipCompCode *string `json:"shipCompCode,omitempty"`
	// voyage number
	VoyageShipCompCode *string `json:"voyageShipCompCode,omitempty"`
}

// NewMovement instantiates a new Movement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMovement() *Movement {
	this := Movement{}
	return &this
}

// NewMovementWithDefaults instantiates a new Movement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMovementWithDefaults() *Movement {
	this := Movement{}
	return &this
}

// GetStatusOrder returns the StatusOrder field value if set, zero value otherwise.
func (o *Movement) GetStatusOrder() string {
	if o == nil || o.StatusOrder == nil {
		var ret string
		return ret
	}
	return *o.StatusOrder
}

// GetStatusOrderOk returns a tuple with the StatusOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetStatusOrderOk() (*string, bool) {
	if o == nil || o.StatusOrder == nil {
		return nil, false
	}
	return o.StatusOrder, true
}

// HasStatusOrder returns a boolean if a field has been set.
func (o *Movement) HasStatusOrder() bool {
	if o != nil && o.StatusOrder != nil {
		return true
	}

	return false
}

// SetStatusOrder gets a reference to the given string and assigns it to the StatusOrder field.
func (o *Movement) SetStatusOrder(v string) {
	o.StatusOrder = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Movement) GetStatus() CodeAndName {
	if o == nil || o.Status == nil {
		var ret CodeAndName
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetStatusOk() (*CodeAndName, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Movement) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CodeAndName and assigns it to the Status field.
func (o *Movement) SetStatus(v CodeAndName) {
	o.Status = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *Movement) GetDate() time.Time {
	if o == nil || o.Date == nil {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetDateOk() (*time.Time, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *Movement) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *Movement) SetDate(v time.Time) {
	o.Date = &v
}

// GetReportedOn returns the ReportedOn field value if set, zero value otherwise.
func (o *Movement) GetReportedOn() time.Time {
	if o == nil || o.ReportedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ReportedOn
}

// GetReportedOnOk returns a tuple with the ReportedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetReportedOnOk() (*time.Time, bool) {
	if o == nil || o.ReportedOn == nil {
		return nil, false
	}
	return o.ReportedOn, true
}

// HasReportedOn returns a boolean if a field has been set.
func (o *Movement) HasReportedOn() bool {
	if o != nil && o.ReportedOn != nil {
		return true
	}

	return false
}

// SetReportedOn gets a reference to the given time.Time and assigns it to the ReportedOn field.
func (o *Movement) SetReportedOn(v time.Time) {
	o.ReportedOn = &v
}

// GetPoolLocation returns the PoolLocation field value if set, zero value otherwise.
func (o *Movement) GetPoolLocation() string {
	if o == nil || o.PoolLocation == nil {
		var ret string
		return ret
	}
	return *o.PoolLocation
}

// GetPoolLocationOk returns a tuple with the PoolLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetPoolLocationOk() (*string, bool) {
	if o == nil || o.PoolLocation == nil {
		return nil, false
	}
	return o.PoolLocation, true
}

// HasPoolLocation returns a boolean if a field has been set.
func (o *Movement) HasPoolLocation() bool {
	if o != nil && o.PoolLocation != nil {
		return true
	}

	return false
}

// SetPoolLocation gets a reference to the given string and assigns it to the PoolLocation field.
func (o *Movement) SetPoolLocation(v string) {
	o.PoolLocation = &v
}

// GetPointLocation returns the PointLocation field value if set, zero value otherwise.
func (o *Movement) GetPointLocation() CodeAndName {
	if o == nil || o.PointLocation == nil {
		var ret CodeAndName
		return ret
	}
	return *o.PointLocation
}

// GetPointLocationOk returns a tuple with the PointLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetPointLocationOk() (*CodeAndName, bool) {
	if o == nil || o.PointLocation == nil {
		return nil, false
	}
	return o.PointLocation, true
}

// HasPointLocation returns a boolean if a field has been set.
func (o *Movement) HasPointLocation() bool {
	if o != nil && o.PointLocation != nil {
		return true
	}

	return false
}

// SetPointLocation gets a reference to the given CodeAndName and assigns it to the PointLocation field.
func (o *Movement) SetPointLocation(v CodeAndName) {
	o.PointLocation = &v
}

// GetVoyageReference returns the VoyageReference field value if set, zero value otherwise.
func (o *Movement) GetVoyageReference() string {
	if o == nil || o.VoyageReference == nil {
		var ret string
		return ret
	}
	return *o.VoyageReference
}

// GetVoyageReferenceOk returns a tuple with the VoyageReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetVoyageReferenceOk() (*string, bool) {
	if o == nil || o.VoyageReference == nil {
		return nil, false
	}
	return o.VoyageReference, true
}

// HasVoyageReference returns a boolean if a field has been set.
func (o *Movement) HasVoyageReference() bool {
	if o != nil && o.VoyageReference != nil {
		return true
	}

	return false
}

// SetVoyageReference gets a reference to the given string and assigns it to the VoyageReference field.
func (o *Movement) SetVoyageReference(v string) {
	o.VoyageReference = &v
}

// GetVessel returns the Vessel field value if set, zero value otherwise.
func (o *Movement) GetVessel() Vessel {
	if o == nil || o.Vessel == nil {
		var ret Vessel
		return ret
	}
	return *o.Vessel
}

// GetVesselOk returns a tuple with the Vessel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetVesselOk() (*Vessel, bool) {
	if o == nil || o.Vessel == nil {
		return nil, false
	}
	return o.Vessel, true
}

// HasVessel returns a boolean if a field has been set.
func (o *Movement) HasVessel() bool {
	if o != nil && o.Vessel != nil {
		return true
	}

	return false
}

// SetVessel gets a reference to the given Vessel and assigns it to the Vessel field.
func (o *Movement) SetVessel(v Vessel) {
	o.Vessel = &v
}

// GetPointOfDischarge returns the PointOfDischarge field value if set, zero value otherwise.
func (o *Movement) GetPointOfDischarge() string {
	if o == nil || o.PointOfDischarge == nil {
		var ret string
		return ret
	}
	return *o.PointOfDischarge
}

// GetPointOfDischargeOk returns a tuple with the PointOfDischarge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetPointOfDischargeOk() (*string, bool) {
	if o == nil || o.PointOfDischarge == nil {
		return nil, false
	}
	return o.PointOfDischarge, true
}

// HasPointOfDischarge returns a boolean if a field has been set.
func (o *Movement) HasPointOfDischarge() bool {
	if o != nil && o.PointOfDischarge != nil {
		return true
	}

	return false
}

// SetPointOfDischarge gets a reference to the given string and assigns it to the PointOfDischarge field.
func (o *Movement) SetPointOfDischarge(v string) {
	o.PointOfDischarge = &v
}

// GetPortOfOrigin returns the PortOfOrigin field value if set, zero value otherwise.
func (o *Movement) GetPortOfOrigin() string {
	if o == nil || o.PortOfOrigin == nil {
		var ret string
		return ret
	}
	return *o.PortOfOrigin
}

// GetPortOfOriginOk returns a tuple with the PortOfOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetPortOfOriginOk() (*string, bool) {
	if o == nil || o.PortOfOrigin == nil {
		return nil, false
	}
	return o.PortOfOrigin, true
}

// HasPortOfOrigin returns a boolean if a field has been set.
func (o *Movement) HasPortOfOrigin() bool {
	if o != nil && o.PortOfOrigin != nil {
		return true
	}

	return false
}

// SetPortOfOrigin gets a reference to the given string and assigns it to the PortOfOrigin field.
func (o *Movement) SetPortOfOrigin(v string) {
	o.PortOfOrigin = &v
}

// GetPortOfLoading returns the PortOfLoading field value if set, zero value otherwise.
func (o *Movement) GetPortOfLoading() string {
	if o == nil || o.PortOfLoading == nil {
		var ret string
		return ret
	}
	return *o.PortOfLoading
}

// GetPortOfLoadingOk returns a tuple with the PortOfLoading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetPortOfLoadingOk() (*string, bool) {
	if o == nil || o.PortOfLoading == nil {
		return nil, false
	}
	return o.PortOfLoading, true
}

// HasPortOfLoading returns a boolean if a field has been set.
func (o *Movement) HasPortOfLoading() bool {
	if o != nil && o.PortOfLoading != nil {
		return true
	}

	return false
}

// SetPortOfLoading gets a reference to the given string and assigns it to the PortOfLoading field.
func (o *Movement) SetPortOfLoading(v string) {
	o.PortOfLoading = &v
}

// GetFinalPod returns the FinalPod field value if set, zero value otherwise.
func (o *Movement) GetFinalPod() string {
	if o == nil || o.FinalPod == nil {
		var ret string
		return ret
	}
	return *o.FinalPod
}

// GetFinalPodOk returns a tuple with the FinalPod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetFinalPodOk() (*string, bool) {
	if o == nil || o.FinalPod == nil {
		return nil, false
	}
	return o.FinalPod, true
}

// HasFinalPod returns a boolean if a field has been set.
func (o *Movement) HasFinalPod() bool {
	if o != nil && o.FinalPod != nil {
		return true
	}

	return false
}

// SetFinalPod gets a reference to the given string and assigns it to the FinalPod field.
func (o *Movement) SetFinalPod(v string) {
	o.FinalPod = &v
}

// GetFinalDest returns the FinalDest field value if set, zero value otherwise.
func (o *Movement) GetFinalDest() string {
	if o == nil || o.FinalDest == nil {
		var ret string
		return ret
	}
	return *o.FinalDest
}

// GetFinalDestOk returns a tuple with the FinalDest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetFinalDestOk() (*string, bool) {
	if o == nil || o.FinalDest == nil {
		return nil, false
	}
	return o.FinalDest, true
}

// HasFinalDest returns a boolean if a field has been set.
func (o *Movement) HasFinalDest() bool {
	if o != nil && o.FinalDest != nil {
		return true
	}

	return false
}

// SetFinalDest gets a reference to the given string and assigns it to the FinalDest field.
func (o *Movement) SetFinalDest(v string) {
	o.FinalDest = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *Movement) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *Movement) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *Movement) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetShipCompCode returns the ShipCompCode field value if set, zero value otherwise.
func (o *Movement) GetShipCompCode() string {
	if o == nil || o.ShipCompCode == nil {
		var ret string
		return ret
	}
	return *o.ShipCompCode
}

// GetShipCompCodeOk returns a tuple with the ShipCompCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetShipCompCodeOk() (*string, bool) {
	if o == nil || o.ShipCompCode == nil {
		return nil, false
	}
	return o.ShipCompCode, true
}

// HasShipCompCode returns a boolean if a field has been set.
func (o *Movement) HasShipCompCode() bool {
	if o != nil && o.ShipCompCode != nil {
		return true
	}

	return false
}

// SetShipCompCode gets a reference to the given string and assigns it to the ShipCompCode field.
func (o *Movement) SetShipCompCode(v string) {
	o.ShipCompCode = &v
}

// GetVoyageShipCompCode returns the VoyageShipCompCode field value if set, zero value otherwise.
func (o *Movement) GetVoyageShipCompCode() string {
	if o == nil || o.VoyageShipCompCode == nil {
		var ret string
		return ret
	}
	return *o.VoyageShipCompCode
}

// GetVoyageShipCompCodeOk returns a tuple with the VoyageShipCompCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Movement) GetVoyageShipCompCodeOk() (*string, bool) {
	if o == nil || o.VoyageShipCompCode == nil {
		return nil, false
	}
	return o.VoyageShipCompCode, true
}

// HasVoyageShipCompCode returns a boolean if a field has been set.
func (o *Movement) HasVoyageShipCompCode() bool {
	if o != nil && o.VoyageShipCompCode != nil {
		return true
	}

	return false
}

// SetVoyageShipCompCode gets a reference to the given string and assigns it to the VoyageShipCompCode field.
func (o *Movement) SetVoyageShipCompCode(v string) {
	o.VoyageShipCompCode = &v
}

func (o Movement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StatusOrder != nil {
		toSerialize["statusOrder"] = o.StatusOrder
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.ReportedOn != nil {
		toSerialize["reportedOn"] = o.ReportedOn
	}
	if o.PoolLocation != nil {
		toSerialize["poolLocation"] = o.PoolLocation
	}
	if o.PointLocation != nil {
		toSerialize["pointLocation"] = o.PointLocation
	}
	if o.VoyageReference != nil {
		toSerialize["voyageReference"] = o.VoyageReference
	}
	if o.Vessel != nil {
		toSerialize["vessel"] = o.Vessel
	}
	if o.PointOfDischarge != nil {
		toSerialize["pointOfDischarge"] = o.PointOfDischarge
	}
	if o.PortOfOrigin != nil {
		toSerialize["portOfOrigin"] = o.PortOfOrigin
	}
	if o.PortOfLoading != nil {
		toSerialize["portOfLoading"] = o.PortOfLoading
	}
	if o.FinalPod != nil {
		toSerialize["finalPod"] = o.FinalPod
	}
	if o.FinalDest != nil {
		toSerialize["finalDest"] = o.FinalDest
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.ShipCompCode != nil {
		toSerialize["shipCompCode"] = o.ShipCompCode
	}
	if o.VoyageShipCompCode != nil {
		toSerialize["voyageShipCompCode"] = o.VoyageShipCompCode
	}
	return json.Marshal(toSerialize)
}

type NullableMovement struct {
	value *Movement
	isSet bool
}

func (v NullableMovement) Get() *Movement {
	return v.value
}

func (v *NullableMovement) Set(val *Movement) {
	v.value = val
	v.isSet = true
}

func (v NullableMovement) IsSet() bool {
	return v.isSet
}

func (v *NullableMovement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMovement(val *Movement) *NullableMovement {
	return &NullableMovement{value: val, isSet: true}
}

func (v NullableMovement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMovement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


