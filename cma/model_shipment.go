/*
 * logistic.tracking.v1
 *
 * Retrieve tracking data about your cargo using container number, booking number or bill of lading.
 *
 * API version: 1.4.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cma

import (
	"encoding/json"
)

// Shipment struct for Shipment
type Shipment struct {
	PortOfLoading *CodeAndName `json:"portOfLoading,omitempty"`
	// country code of the port of loading such as FR
	PortOfLoadingCountryCode *string `json:"portOfLoadingCountryCode,omitempty"`
	PortOfDischarge *CodeAndName `json:"portOfDischarge,omitempty"`
	// country code of the port of discharge such as FR
	PortOfDischargeCountryCode *string `json:"portOfDischargeCountryCode,omitempty"`
	// Voyage Reference
	VoyageReference *string `json:"voyageReference,omitempty"`
	// Number of units
	NbUnits *int32 `json:"nbUnits,omitempty"`
	Routes *[]Route `json:"routes,omitempty"`
}

// NewShipment instantiates a new Shipment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipment() *Shipment {
	this := Shipment{}
	return &this
}

// NewShipmentWithDefaults instantiates a new Shipment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentWithDefaults() *Shipment {
	this := Shipment{}
	return &this
}

// GetPortOfLoading returns the PortOfLoading field value if set, zero value otherwise.
func (o *Shipment) GetPortOfLoading() CodeAndName {
	if o == nil || o.PortOfLoading == nil {
		var ret CodeAndName
		return ret
	}
	return *o.PortOfLoading
}

// GetPortOfLoadingOk returns a tuple with the PortOfLoading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipment) GetPortOfLoadingOk() (*CodeAndName, bool) {
	if o == nil || o.PortOfLoading == nil {
		return nil, false
	}
	return o.PortOfLoading, true
}

// HasPortOfLoading returns a boolean if a field has been set.
func (o *Shipment) HasPortOfLoading() bool {
	if o != nil && o.PortOfLoading != nil {
		return true
	}

	return false
}

// SetPortOfLoading gets a reference to the given CodeAndName and assigns it to the PortOfLoading field.
func (o *Shipment) SetPortOfLoading(v CodeAndName) {
	o.PortOfLoading = &v
}

// GetPortOfLoadingCountryCode returns the PortOfLoadingCountryCode field value if set, zero value otherwise.
func (o *Shipment) GetPortOfLoadingCountryCode() string {
	if o == nil || o.PortOfLoadingCountryCode == nil {
		var ret string
		return ret
	}
	return *o.PortOfLoadingCountryCode
}

// GetPortOfLoadingCountryCodeOk returns a tuple with the PortOfLoadingCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipment) GetPortOfLoadingCountryCodeOk() (*string, bool) {
	if o == nil || o.PortOfLoadingCountryCode == nil {
		return nil, false
	}
	return o.PortOfLoadingCountryCode, true
}

// HasPortOfLoadingCountryCode returns a boolean if a field has been set.
func (o *Shipment) HasPortOfLoadingCountryCode() bool {
	if o != nil && o.PortOfLoadingCountryCode != nil {
		return true
	}

	return false
}

// SetPortOfLoadingCountryCode gets a reference to the given string and assigns it to the PortOfLoadingCountryCode field.
func (o *Shipment) SetPortOfLoadingCountryCode(v string) {
	o.PortOfLoadingCountryCode = &v
}

// GetPortOfDischarge returns the PortOfDischarge field value if set, zero value otherwise.
func (o *Shipment) GetPortOfDischarge() CodeAndName {
	if o == nil || o.PortOfDischarge == nil {
		var ret CodeAndName
		return ret
	}
	return *o.PortOfDischarge
}

// GetPortOfDischargeOk returns a tuple with the PortOfDischarge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipment) GetPortOfDischargeOk() (*CodeAndName, bool) {
	if o == nil || o.PortOfDischarge == nil {
		return nil, false
	}
	return o.PortOfDischarge, true
}

// HasPortOfDischarge returns a boolean if a field has been set.
func (o *Shipment) HasPortOfDischarge() bool {
	if o != nil && o.PortOfDischarge != nil {
		return true
	}

	return false
}

// SetPortOfDischarge gets a reference to the given CodeAndName and assigns it to the PortOfDischarge field.
func (o *Shipment) SetPortOfDischarge(v CodeAndName) {
	o.PortOfDischarge = &v
}

// GetPortOfDischargeCountryCode returns the PortOfDischargeCountryCode field value if set, zero value otherwise.
func (o *Shipment) GetPortOfDischargeCountryCode() string {
	if o == nil || o.PortOfDischargeCountryCode == nil {
		var ret string
		return ret
	}
	return *o.PortOfDischargeCountryCode
}

// GetPortOfDischargeCountryCodeOk returns a tuple with the PortOfDischargeCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipment) GetPortOfDischargeCountryCodeOk() (*string, bool) {
	if o == nil || o.PortOfDischargeCountryCode == nil {
		return nil, false
	}
	return o.PortOfDischargeCountryCode, true
}

// HasPortOfDischargeCountryCode returns a boolean if a field has been set.
func (o *Shipment) HasPortOfDischargeCountryCode() bool {
	if o != nil && o.PortOfDischargeCountryCode != nil {
		return true
	}

	return false
}

// SetPortOfDischargeCountryCode gets a reference to the given string and assigns it to the PortOfDischargeCountryCode field.
func (o *Shipment) SetPortOfDischargeCountryCode(v string) {
	o.PortOfDischargeCountryCode = &v
}

// GetVoyageReference returns the VoyageReference field value if set, zero value otherwise.
func (o *Shipment) GetVoyageReference() string {
	if o == nil || o.VoyageReference == nil {
		var ret string
		return ret
	}
	return *o.VoyageReference
}

// GetVoyageReferenceOk returns a tuple with the VoyageReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipment) GetVoyageReferenceOk() (*string, bool) {
	if o == nil || o.VoyageReference == nil {
		return nil, false
	}
	return o.VoyageReference, true
}

// HasVoyageReference returns a boolean if a field has been set.
func (o *Shipment) HasVoyageReference() bool {
	if o != nil && o.VoyageReference != nil {
		return true
	}

	return false
}

// SetVoyageReference gets a reference to the given string and assigns it to the VoyageReference field.
func (o *Shipment) SetVoyageReference(v string) {
	o.VoyageReference = &v
}

// GetNbUnits returns the NbUnits field value if set, zero value otherwise.
func (o *Shipment) GetNbUnits() int32 {
	if o == nil || o.NbUnits == nil {
		var ret int32
		return ret
	}
	return *o.NbUnits
}

// GetNbUnitsOk returns a tuple with the NbUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipment) GetNbUnitsOk() (*int32, bool) {
	if o == nil || o.NbUnits == nil {
		return nil, false
	}
	return o.NbUnits, true
}

// HasNbUnits returns a boolean if a field has been set.
func (o *Shipment) HasNbUnits() bool {
	if o != nil && o.NbUnits != nil {
		return true
	}

	return false
}

// SetNbUnits gets a reference to the given int32 and assigns it to the NbUnits field.
func (o *Shipment) SetNbUnits(v int32) {
	o.NbUnits = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *Shipment) GetRoutes() []Route {
	if o == nil || o.Routes == nil {
		var ret []Route
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipment) GetRoutesOk() (*[]Route, bool) {
	if o == nil || o.Routes == nil {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *Shipment) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []Route and assigns it to the Routes field.
func (o *Shipment) SetRoutes(v []Route) {
	o.Routes = &v
}

func (o Shipment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PortOfLoading != nil {
		toSerialize["portOfLoading"] = o.PortOfLoading
	}
	if o.PortOfLoadingCountryCode != nil {
		toSerialize["portOfLoadingCountryCode"] = o.PortOfLoadingCountryCode
	}
	if o.PortOfDischarge != nil {
		toSerialize["portOfDischarge"] = o.PortOfDischarge
	}
	if o.PortOfDischargeCountryCode != nil {
		toSerialize["portOfDischargeCountryCode"] = o.PortOfDischargeCountryCode
	}
	if o.VoyageReference != nil {
		toSerialize["voyageReference"] = o.VoyageReference
	}
	if o.NbUnits != nil {
		toSerialize["nbUnits"] = o.NbUnits
	}
	if o.Routes != nil {
		toSerialize["routes"] = o.Routes
	}
	return json.Marshal(toSerialize)
}

type NullableShipment struct {
	value *Shipment
	isSet bool
}

func (v NullableShipment) Get() *Shipment {
	return v.value
}

func (v *NullableShipment) Set(val *Shipment) {
	v.value = val
	v.isSet = true
}

func (v NullableShipment) IsSet() bool {
	return v.isSet
}

func (v *NullableShipment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipment(val *Shipment) *NullableShipment {
	return &NullableShipment{value: val, isSet: true}
}

func (v NullableShipment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


